@model DeliverEase.Models.NavigationModel
@{
    ViewBag.Title = "AcceptDel";
}

<h2>Delivery Nav</h2>

<style>
      /* Always set the map height explicitly to define the size of the div
       * element that contains the map. */
      #map {
        height: 500px;
        width: 75%;
      }
      /* Optional: Makes the sample page fill the window. */
      
      #floating-panel {
        position: absolute;
        top: 10px;
        left: 10%;
        z-index: 5;
        background-color: #fff;
        padding: 5px;
        border: 1px solid #999;
        text-align: center;
        font-family: 'Roboto','sans-serif';
        line-height: 30px;
        padding-left: 10px;
      }
      #right-panel {
        font-family: 'Roboto','sans-serif'; 
        font-size: 20px;
              
        line-height: 30px;
        padding-left: 10px;
        
      }

      #right-panel select, #right-panel input {
        font-size: 18px;
       
      }

      #right-panel select {
        width: 100%;
      }

      #right-panel i {
        font-size: 12px;
      }
      #right-panel {
        height: 500px;
        float: right;
        width: 25%;
        overflow: auto;
        
      }
      #map {
        margin-right: 400px;
      }
      #floating-panel {
        background: #fff;
        padding: 5px;
        font-size: 14px;
        font-family: Arial;
        border: 1px solid #ccc;
        box-shadow: 0 2px 2px rgba(33, 33, 33, 0.4);
        display: none;
      }
      @@media print {
        #map {
          height: 500px;
          margin: 0;
        }
        #right-panel {
          float: none;
          width: auto;
        }
      }
</style>
  
    <div id="floating-panel">
        <strong>Start:</strong>
        <select id="start">
            <option value="">----</option>
            <option value="" id="cur">Current Location</option>
            <option value="@Model.Delivery.Rest.RestaurantAddress">Restaurant</option>
            
            
        </select>
        <br>
        <strong>End:</strong>
        <select id="end">            
            <option value="@Model.Delivery.Rest.RestaurantAddress">Restaurant</option>
            <option value="@Model.Delivery.CustomerAddress">Customer</option>
            
        </select>
        <br />
        <btn class="btn btn-primary btn-sm" onclick="geocodeCurrent()">Set Location</btn>
    </div>
    <div class="row">
        
        <div id="right-panel"></div>
        
        <div id="map"></div>
        <br />
        <div class="text-center panel col-md-offset-7" style="width: 200px">
        <p style="font-size: 20px">Complete Delivery</p>
        <div>@Html.ActionLink("Finish","CompleteDel", new { id = Model.Delivery.Id }, new { @class = "btn btn-success btn-lg" })</div>
            <br />
        </div>
    </div> 
    @section scripts{
    <script>
      function initMap() {
        var directionsDisplay = new google.maps.DirectionsRenderer;
        var directionsService = new google.maps.DirectionsService;
        var map = new google.maps.Map(document.getElementById('map'), {
          zoom: 7,
          center: {lat: 41.85, lng: -87.65}
        });
        directionsDisplay.setMap(map);
        directionsDisplay.setPanel(document.getElementById('right-panel'));

        var control = document.getElementById('floating-panel');
        control.style.display = 'block';
        map.controls[google.maps.ControlPosition.TOP_CENTER].push(control);

        var onChangeHandler = function() {
          calculateAndDisplayRoute(directionsService, directionsDisplay);
        };
        document.getElementById('start').addEventListener('change', onChangeHandler);
        document.getElementById('end').addEventListener('change', onChangeHandler);
      }
      function geocodeCurrent() {
          var geocoder = new google.maps.Geocoder;

          if (navigator.geolocation) {
              navigator.geolocation.getCurrentPosition(function (position) {
                  var pos = {
                      lat: position.coords.latitude,
                      lng: position.coords.longitude
                  };
                  geocoder.geocode({ 'location': pos }, function (results, status) {
                      if (status === 'OK') {
                          if (results[0]) {
                             
                              var element = document.getElementById('cur');
                              element.value = results[0].formatted_address;
                              
                          } else {
                              window.alert('No results found');
                          }
                      } else {
                          window.alert('Geocoder failed due to: ' + status);
                      }
                  });

                 
              }, function () {
                  handleLocationError(true, infoWindow, map.getCenter());
              });
          } else {
              // Browser doesn't support Geolocation
              handleLocationError(false, infoWindow, map.getCenter());
          }

      }

      function handleLocationError(browserHasGeolocation, infoWindow, pos) {
          infoWindow.setPosition(pos);
          infoWindow.setContent(browserHasGeolocation ?
                                'Error: The Geolocation service failed.' :
                                'Error: Your browser doesn\'t support geolocation.');
          infoWindow.open(map);
      }

      function calculateAndDisplayRoute(directionsService, directionsDisplay) {
        var start = document.getElementById('start').value;
        var end = document.getElementById('end').value;
        directionsService.route({
          origin: start,
          destination: end,
          travelMode: 'DRIVING'
        }, function(response, status) {
          if (status === 'OK') {
            directionsDisplay.setDirections(response);
          } else {
            window.alert('Directions request failed due to ' + status);
          }
        });
      }
    </script>
    <script async defer
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCxzznBe8ybNXYxz0ZOyhRJQbbVGvam75s&callback=initMap">
    </script>
        }